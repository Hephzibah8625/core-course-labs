name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      security-events: write

    steps:
    - uses: actions/checkout@v2

    # Enable caching
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('lab1/app_python/requirements.txt') }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    # Add a restore step to restore the cache
    - name: Restore dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('lab1/app_python/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./lab1/app_python/requirements.txt

    - name: Lint with flake8
      run: flake8 ./lab1/app_python/.

    - name: Test with pytest
      run: pytest ./lab1/app_python/test.py


    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python-3.9@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --sarif-file-output=snyk.sarif --workdir lab1/app_python --all-projects --allow-missing
    
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif

    - name: Login to Docker registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./lab1
        file: ./lab1/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/dev-ops-lab-3:latest